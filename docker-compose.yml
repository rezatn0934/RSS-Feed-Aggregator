services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-alpine
    networks:
      - main
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASSWORD}
    networks:
      - main
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres_data_rss:/var/lib/postgresql/data

  app:
    build: .
    container_name: app
    volumes:
      - .:/code/
    depends_on:
      - postgres
      - elasticsearch
    ports:
      - 8000:8000
    networks:
      - main
    restart: always

  redis:
    container_name: redis
    image: redis:7.0-alpine
    networks:
      - main
    ports:
      - 6379:6379
    restart: always
    volumes:
      - redis_data_rss:/data

  celery:
    container_name: celery
    command: celery -A config worker -l INFO
    depends_on:
      - app
      - redis
    build: .
    volumes:
      - .:/code/
    environment:
      - C_FORCE_ROOT=true
    networks:
      - main
    restart: always

  celeryscheduler:
    container_name: celeryscheduler
    build: .
    volumes:
      - .:/code/
    command: celery -A config beat -l info  #-B read
    depends_on:
      - celery
    networks:
      - main
    restart: always

  flower:
    container_name: flower
    build: .
    command: celery -A config flower
    networks:
      - main
    ports:
      - 5555:5555
    depends_on:
      - app
      - redis
      - celery
    volumes:
      - flower_data:/flower_data


networks:
  main:


volumes:
  postgres_data_rss:
  redis_data_rss:
  rabbitmq_data:
  flower_data:
